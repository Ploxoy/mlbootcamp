{
    "collab_server" : "",
    "contents" : "set.seed(32121)\n\ndebugSource(\"algos.R\")\n\nXX = read.csv(file=\"crx_data_train_x.csv\", head=F, sep=\",\", na.strings=\"?\")\nYY = read.csv(file=\"crx_data_train_y.csv\", head=F, sep=\",\", na.strings=\"?\")\nXL = as.matrix(unname(cbind(data.matrix(XX), YY)))\n\n# удаление строк с неполными данными\n\"\ntmp = matrix(NA, 0, ncol(XL))\nfor (i in 1:nrow(XL)) {\n  if (!any(is.na(XL[i,])))\n    tmp = rbind(tmp, as.matrix(XL[i,]))\n  else\n    print(paste0('??? ', XL[i, ncol(XL)]))\n}\nXL = tmp #TODO\n\"\n\n\n#testTree = function() {\npredicates = c()\nfor(j in 1:(ncol(XL)-1)) {\n  possibleValues = unique(sort(XL[,j]))\n  \n  for(k in 2:length(possibleValues)) {\n    thr = (possibleValues[k] + possibleValues[k - 1]) / 2\n    predicates = c(predicates, local({\n      j <- j;\n      thr <- thr;\n      function(xx) {\n        if (is.na(xx[j])) {\n          return( NA )\n        }\n        return( xx[j] < thr )\n      }\n    }))\n  }\n}\npredicates = predicates[sample(1:length(predicates))]\nprint(paste('Number of predicates: ', length(predicates)))\n\ntreeClassifier = ID3.classifier(adaBoostAggregator, XL, predicates, treesCount=400, treesDepth=2, partsFactor=0.05, predicatesFactor=0.3)\n\"\ntreeClassifier = ID3.treeClassifier(XL, predicates, 4)\n\"\nprint(paste0('error = ', calculateError(XL, treeClassifier) * 100, '%'))\n\nXXX = read.csv(file='crx_data_test_x.csv', head=F, sep=',', na.strings='?')\nXXX = data.matrix(XXX)\nresults = c()\nfor (i in 1:nrow(XXX)) {\n  x = XXX[i,]\n  #x[is.na(x)] = 0\n  r = treeClassifier(x)\n  results = c(results, r)\n}\nwrite(1-results, file='res.txt', sep='\\n')\n\n#}",
    "created" : 1486807063657.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "814250065",
    "id" : "D0E5E8A",
    "lastKnownWriteTime" : 1486845119,
    "last_content_update" : 1486845119873,
    "path" : "G:/Projects/mlbootcamp/sandbox_train/main.R",
    "project_path" : "main.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}